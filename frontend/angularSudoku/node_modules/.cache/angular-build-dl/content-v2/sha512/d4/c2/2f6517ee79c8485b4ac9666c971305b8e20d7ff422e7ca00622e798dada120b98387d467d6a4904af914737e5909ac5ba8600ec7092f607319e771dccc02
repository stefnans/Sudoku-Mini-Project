{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/square.service.ts","webpack:///src/app/square/square.component.ts","webpack:///src/app/square/square.component.html","webpack:///src/app/sudoku-element.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","SquareService","http","restUrl","get","play","post","providedIn","SquareComponent","squareService","input","selectedCellX","selectedCellY","find","subscribe","data","square","i","j","postTurn","result","playerFeedback","err","error","SudokuApiError","message","reset","resetGame","SudokuElement","elem","x","y","environment","production","bootstrapModule","catch","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularSudoku';\n}\n","<h1>Sudoku</h1>\n<app-square></app-square>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SquareComponent } from './square/square.component';\nimport { SquareService } from './square.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SquareComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [SquareService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Square } from './square';\nimport { SudokuElement } from './sudoku-element';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SquareService {\n\n  private restUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.restUrl = 'http://localhost:8080/'\n   }\n\n   public find(): Observable<Square> {\n    return this.http.get<Square>(this.restUrl);\n  }\n\n  public postTurn(play: SudokuElement) {\n    return this.http.post<SudokuElement>(this.restUrl + 'turns', play);\n  }\n\n  public reset(): Observable<Square> {\n    return this.http.get<Square>(this.restUrl + 'reset');\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Square } from '../square';\nimport { SquareService } from '../square.service';\nimport { example } from '../example'\nimport { SudokuElement } from '../sudoku-element';\n\n@Component({\n  selector: 'app-square',\n  templateUrl: './square.component.html',\n  styleUrls: ['./square.component.css']\n})\nexport class SquareComponent implements OnInit {\n\n  @Input() square: Square;\n  input = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n  selectedCellX = -1;\n  selectedCellY = -1;\n\n  playerFeedback: String;\n\n  constructor(private squareService: SquareService) { }\n\n  ngOnInit(): void {\n    this.squareService.find().subscribe(data => {\n      this.square = data;\n    })\n  }\n\n  cellClick(i, j) {\n    this.selectedCellX = i;\n    this.selectedCellY = j;\n  }\n\n  update(i) {\n    // If there is a selected cell\n    if (!(this.selectedCellX == -1 || this.selectedCellY == -1)) {\n      this.squareService.postTurn(new SudokuElement(i, this.selectedCellX, this.selectedCellY))\n        .subscribe(result => {\n          this.playerFeedback = \"Ok\"\n          this.square.square[this.selectedCellX][this.selectedCellY] = i;\n        },\n          err => this.playerFeedback = err.error.SudokuApiError.message\n        )\n    }\n  }\n\n  resetGame() {\n    this.squareService.reset().subscribe(data => {\n      this.square = data;\n    })\n  }\n}\n","<div class=\"game\">\n\n    <div class=\"menu\">\n        <p *ngIf=\"playerFeedback\">\n            {{playerFeedback}}\n        </p>\n\n        <button (click)=\"resetGame()\">\n            Reset\n        </button>\n    </div>\n\n    <div *ngIf=\"square\">\n        <table class=\"sudoku-table\">\n            <tbody>\n                <tr *ngFor=\"let row of square.square; let i = index\">\n                    <td *ngFor=\"let element of row;  let j = index\"\n                        (click)=\"cellClick(i, j)\" [class.active]=\"i==selectedCellX && j==selectedCellY\">\n                        <div *ngIf=\"element > 0\">\n                            {{element}}\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n      </div>\n    \n    <table>\n        <thead>Input table</thead>\n        <tbody>\n            <!--<ng-container *ngFor=\"let row of square.elements; let i = index\">\n                <ng-container *ngFor=\"let point of row.points; let j = index\">\n                  <tr>{{point}}</tr>\n                </ng-container>\n              </ng-container>   --> \n            <tr *ngFor=\"let row of input\">\n                  <td *ngFor=\"let element of row\" (click)=\"update(element)\">{{element}}</td>\n              </tr>\n        </tbody>\n    </table>\n</div>","export class SudokuElement {\n    elem: number\n    x: number\n    y: number\n\n    constructor(elem: number, x: number, y: number) {\n        this.elem = elem;\n        this.x = x;\n        this.y = y;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}